import { addons, types, useParameter } from "@storybook/manager-api";
import { AddonPanel } from "@storybook/components";
import { jsx } from "@storybook/theming";
import { AddonName, PanelName, ParameterName } from "../addon";
import { ErrorBoundary } from "./components/ErrorBoundary";
import { Wrapper } from "./containers/Wrapper";
var DEFAULT_TAB_NAME = "Design";
export default function register(renderTarget) {
    addons.register(AddonName, function (api) {
        var title = function () {
            var param = useParameter(ParameterName);
            if (!param) {
                return DEFAULT_TAB_NAME;
            }
            if (Array.isArray(param)) {
                return param.length > 0
                    ? "".concat(DEFAULT_TAB_NAME, " (").concat(param.length, ")")
                    : DEFAULT_TAB_NAME;
            }
            return (param.name || DEFAULT_TAB_NAME) + " (1)";
        };
        if (renderTarget === "tab") {
            addons.add(PanelName, {
                title: DEFAULT_TAB_NAME,
                render: function (_a) {
                    var active = _a.active, key = _a.key;
                    if (!active) {
                        return jsx("noscript", { key: key });
                    }
                    return (jsx(ErrorBoundary, { key: key },
                        jsx(Wrapper, { active: true })));
                },
                type: types.TAB,
                paramKey: ParameterName,
                route: function (_a) {
                    var storyId = _a.storyId;
                    return "/design/".concat(storyId);
                },
                match: function (_a) {
                    var viewMode = _a.viewMode;
                    return viewMode === "design";
                },
            });
        }
        else {
            addons.add(PanelName, {
                type: types.PANEL,
                title: title,
                paramKey: ParameterName,
                render: function (_a) {
                    var active = _a.active;
                    return (jsx(AddonPanel, { active: !!active },
                        jsx(ErrorBoundary, null,
                            jsx(Wrapper, { active: !!active }))));
                },
            });
        }
    });
}
