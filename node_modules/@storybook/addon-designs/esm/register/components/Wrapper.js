var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
import { Fragment, lazy, Suspense } from "react";
import { jsx } from "@storybook/theming";
import { Link, Placeholder } from "@storybook/components";
import { Figma } from "./Figma";
import { IFrame } from "./IFrame";
import { ImagePreview } from "./Image";
import { LinkPanel } from "./LinkPanel";
import { Sketch } from "./Sketch";
import { Tabs } from "./Tabs";
var Figspec = lazy(function () { return import("./Figspec"); });
export var Wrapper = function (_a) {
    var config = _a.config;
    if (!config || ("length" in config && config.length === 0)) {
        return (jsx(Placeholder, null,
            jsx(Fragment, null, "No designs found"),
            jsx(Fragment, null,
                "Learn how to",
                " ",
                jsx(Link, { href: "https://github.com/storybookjs/addon-designs#3-add-it-to-story", target: "_blank", rel: "noopener", withArrow: true, cancel: false }, "display design preview for the story"))));
    }
    var tabs = __spreadArray([], (config instanceof Array ? config : [config]), true).map(function (cfg) {
        var _a, _b;
        var meta = {
            id: JSON.stringify(cfg),
            name: cfg.name ||
                ((_a = cfg.type) === null || _a === void 0 ? void 0 : _a.toUpperCase()) ||
                "ERROR",
            offscreen: (_b = cfg.offscreen) !== null && _b !== void 0 ? _b : true,
        };
        switch (cfg.type) {
            case "iframe":
                return __assign(__assign({}, meta), { content: jsx(IFrame, { config: cfg }) });
            case "figma":
                return __assign(__assign({}, meta), { content: jsx(Figma, { config: cfg }), offscreen: false });
            case "sketch":
                return __assign(__assign({}, meta), { content: jsx(Sketch, { config: cfg }) });
            case "figspec":
            case "experimental-figspec":
                if (cfg.type === "experimental-figspec") {
                    console.warn("[storybook-addon-designs] `experimental-figspec` is deprecated. We will remove it in v7.0. Please replace it to `figspec` type.");
                }
                return __assign(__assign({}, meta), { content: (jsx(Suspense, { fallback: "Preparing Figspec viewer..." },
                        jsx(Figspec, { config: cfg }))), offscreen: false });
            case "image":
                return __assign(__assign({}, meta), { content: jsx(ImagePreview, { config: cfg }) });
            case "link":
                return __assign(__assign({}, meta), { content: jsx(LinkPanel, { config: cfg }) });
        }
        return __assign(__assign({}, meta), { content: (jsx(Placeholder, null,
                jsx(Fragment, null, "Invalid config type"),
                jsx(Fragment, null,
                    "Config type you set is not supported. Please choose one from",
                    " ",
                    jsx(Link, { href: "https://github.com/storybookjs/addon-designs/blob/master/packages/storybook-addon-designs/src/config.ts", target: "_blank", rel: "noopener", withArrow: true, cancel: false }, "available config types")))) });
    });
    if (tabs.length === 1) {
        return jsx("div", null, tabs[0].content);
    }
    return jsx(Tabs, { tabs: tabs, deps: [config] });
};
export default Wrapper;
