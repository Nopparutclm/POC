"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var manager_api_1 = require("@storybook/manager-api");
var components_1 = require("@storybook/components");
var theming_1 = require("@storybook/theming");
var addon_1 = require("../addon");
var ErrorBoundary_1 = require("./components/ErrorBoundary");
var Wrapper_1 = require("./containers/Wrapper");
var DEFAULT_TAB_NAME = "Design";
function register(renderTarget) {
    manager_api_1.addons.register(addon_1.AddonName, function (api) {
        var title = function () {
            var param = (0, manager_api_1.useParameter)(addon_1.ParameterName);
            if (!param) {
                return DEFAULT_TAB_NAME;
            }
            if (Array.isArray(param)) {
                return param.length > 0
                    ? "".concat(DEFAULT_TAB_NAME, " (").concat(param.length, ")")
                    : DEFAULT_TAB_NAME;
            }
            return (param.name || DEFAULT_TAB_NAME) + " (1)";
        };
        if (renderTarget === "tab") {
            manager_api_1.addons.add(addon_1.PanelName, {
                title: DEFAULT_TAB_NAME,
                render: function (_a) {
                    var active = _a.active, key = _a.key;
                    if (!active) {
                        return (0, theming_1.jsx)("noscript", { key: key });
                    }
                    return ((0, theming_1.jsx)(ErrorBoundary_1.ErrorBoundary, { key: key },
                        (0, theming_1.jsx)(Wrapper_1.Wrapper, { active: true })));
                },
                type: manager_api_1.types.TAB,
                paramKey: addon_1.ParameterName,
                route: function (_a) {
                    var storyId = _a.storyId;
                    return "/design/".concat(storyId);
                },
                match: function (_a) {
                    var viewMode = _a.viewMode;
                    return viewMode === "design";
                },
            });
        }
        else {
            manager_api_1.addons.add(addon_1.PanelName, {
                type: manager_api_1.types.PANEL,
                title: title,
                paramKey: addon_1.ParameterName,
                render: function (_a) {
                    var active = _a.active;
                    return ((0, theming_1.jsx)(components_1.AddonPanel, { active: !!active },
                        (0, theming_1.jsx)(ErrorBoundary_1.ErrorBoundary, null,
                            (0, theming_1.jsx)(Wrapper_1.Wrapper, { active: !!active }))));
                },
            });
        }
    });
}
exports.default = register;
